# Local development purposes only.

x-snowflake-loader-common: &snowflake-loader-common
  image: snowflake-loader:production
  build:
    context: load_via_python_api/
    target: production
  environment:
    LOG_LEVEL: INFO
    NUMBER_OF_CUSTOMER: 5
    CUSTOMER_TABLE: customer
    CUSTOMER_JSON_FORMAT: customer_json_format
    BULK_COPY_WAREHOUSE: BULK_COPY_WAREHOUSE
    LOAD_STREAM_WAREHOUSE: LOAD_STREAM_WAREHOUSE
    BULK_LOAD_ROLE: COPY_CUSTOMER_ROLE
    STREAMING_DATA_ROLE: LOAD_ORDER_STREAM_ROLE
    SNOWFLAKE_SCHEMA: SNOWFLAKE_SCHEMA
  secrets:
    - SNOWFLAKE_USER
    - SNOWFLAKE_ACCOUNT
    - SNOWFLAKE_PRIVATE_KEY
    - SNOWFLAKE_DATABASE
  volumes:
    - ./load_via_python_api/src:/app/src

services:
  init-snowflake:
    <<: *snowflake-loader-common
    command: --mode init_job init_job

  bulk-data-loader:
    <<: *snowflake-loader-common
    depends_on:
      init-snowflake:
        condition: service_completed_successfully
    command: --mode run

  kafka-producer:
    image: nodejs-kafka-client:production
    build:
      context: . # NOTE: Need access to shared schemas so build from repo root.
      dockerfile: load_via_kafka/Dockerfile
      target: production
    environment:
      TOPIC: test.entity
      MODE: produce
    secrets:
      - PRIMARY_CONNECTION_STRING

secrets:
  PRIMARY_CONNECTION_STRING:
    environment: PRIMARY_CONNECTION_STRING
  SNOWFLAKE_USER:
    environment: SNOWFLAKE_USER
  SNOWFLAKE_ACCOUNT:
    environment: SNOWFLAKE_ACCOUNT
  SNOWFLAKE_PRIVATE_KEY:
    environment: SNOWFLAKE_PRIVATE_KEY
  SNOWFLAKE_DATABASE:
    environment: SNOWFLAKE_DATABASE
